{
    "name": "Contrast Theme",
    "type": "dark",
    "author": "johndugan",
    "colors": {
        "editor.foreground": "#F8F8F2",
        "editor.background": "#191919"
    },
    "tokenColors": [

        // @todo:
        // support.constant
        // support.module

// Global

        {
            "name": "Comment",
            "scope": [
                "comment"
            ],
            "settings": {
                "foreground": "#6D6D6D"
            }
        },
        {
            "name": "String",
            "scope": [
                "string.quoted"
            ],
            "settings": {
                "foreground": "#FBDFB5"
            }
        },
        {
            "name": "Number",
            "scope": [
                "constant.numeric"
            ],
            "settings": {
                "foreground": "#D0D0D0"
            }
        },
        {
            "name": "Language Constant (`true`, `false, `null`, etc.)",
            "scope": [
                "constant.language"
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },
        {
            "name": "Operator (`+`, `-`, `!`, `typeof`, `instanceof`, etc.)",
            "scope": [
                "keyword.operator"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "Control Flow (`if`, `else`, `switch`, `return`, etc.)",
            "scope": [
                "keyword.control"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "Storage Type (`function`, `class`, `int`, `bool`, etc.)",
            "scope": [
                "storage.type"
            ],
            "settings": {
                "foreground": "#FBDFB5",
                "fontStyle": "italic"
            }
        },
        {
            "name": "Storage Modifier (`public`, `private`, `static`, etc.)",
            "scope": [
                "storage.modifier"
            ],
            "settings": {
                "foreground": "#FBDFB5",
                "fontStyle": "italic"
            }
        },
        {
            "name": "Language Variable (`this`, `self`, `super`, etc.)",
            "scope": [
                "variable.language"
            ],
            "settings": {
                "foreground": "#E9FDAC"
            }
        },
        {
            "name": "Language Method/Function (`setTimeout`, `printf`, etc.)",
            "scope": [
                "support.function"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Separator & Terminator Punctuation (`,`,`:`,`;`)",
            "scope": [
                "punctuation.separator",
                "punctuation.terminator"
            ],
            "settings": {
                "foreground": "#D0D0D0"
            }
        },
        {
            "name": "Regex Contents",
            "scope": [
                "string.regexp",
                "string.regexp keyword.control",
                "string.regexp keyword.operator"
            ],
            "settings": {
                "foreground": "#FBDFB5"
            }
        },
        {
            "name": "Regex Container Punctuation",
            "scope": [
                "string.regexp punctuation.definition.string"
            ],
            "settings": {
                "foreground": "#A9B9B0"
            }
        },
        {
            "name": "Regex Mode (`igm`)",
            "scope": [
                "string.regexp keyword.other"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "Function/Method Name (`function myFunc`)",
            "scope": [
                "entity.name.function"
            ],
            "settings": {
                "foreground": "#8CDAFF"
            }
        },
        {
            "name": "Function/Method Parens (`function myFunc()`)",
            "scope": [
                "punctuation.definition.parameters",
                "punctuation.definition.arguments"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Function/Method Parameter (`function getFullName(fname, lname`)",
            "scope": [
                "variable.parameter"
            ],
            "settings": {
                "foreground": "#D0D0D0",
                "fontStyle": "italic"
            }
        },
        {
            "name": "Function/Method Name Invoked (`myFunc()`)",
            "scope": [
                "variable.function",
                "meta.function-call entity.name.function",
                "meta.method-call entity.name.function"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Class Name (`class Target_Class extends Base_Class`)",
            "scope": [
                "entity.name.type.class",
                "entity.other.inherited-class",
                "support.class"
            ],
            "settings": {
                "foreground": "#B8FCB1"
            }
        },

// HTML & XML

        {
            "name": "Doctype Declaration (`<!DOCTYPE html>`)",
            "scope": [
                "meta.tag.sgml",
                "meta.tag.sgml variable.language",
                "meta.tag.sgml punctuation.definition.tag"
            ],
            "settings": {
                "foreground": "#FFCC32"
            }
        },
        {
            "name": "XML Preprocessor (`<?xml ... ?>`)",
            "scope": [
                "meta.tag.preprocessor",
                "meta.tag.preprocessor entity.name.tag",
                "meta.tag.preprocessor punctuation.definition.tag"
            ],
            "settings": {
                "foreground": "#FFCC32"
            }
        },
        {
            "name": "Tag Name",
            "scope": [
                "entity.name.tag"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "Tag Brackets",
            "scope": [
                "punctuation.definition.tag"
            ],
            "settings": {
                "foreground": "#D0D0D0"
            }
        },
        {
            "name": "Attribute Name",
            "scope": [
                "entity.other.attribute-name"
            ],
            "settings": {
                "foreground": "#8CDAFF"
            }
        },
        {
            "name": "Script Tag Name & Brackets (`<script></script>`)",
            "scope": [
                "meta.tag.metadata.script entity.name.tag",
                "meta.tag.metadata.script punctuation.definition.tag"
            ],
            "settings": {
                "foreground": "#B8FCB1"
            }
        },

// CSS & Sass

        {
            "name": "Property Name",
            "scope": [
                "support.type.property-name"
            ],
            "settings": {
                "foreground": "#F8F8F2"
            }
        },
        {
            "name": "Property Value",
            "scope": [
                "meta.property-value"
            ],
            "settings": {
                "foreground": "#FBDFB5"
            }
        },
        {
            "name": "Selector Braces (`{}`)",
            "scope": [
                "punctuation.section"
            ],
            "settings": {
                "foreground": "#D0D0D0"
            }
        },
        {
            "name": "Variable (`--my-var`, `$my-var`)",
            "scope": [
                "variable.css",
                "variable.scss"
            ],
            "settings": {
                "foreground": "#FFE082"
            }
        },
        {
            "name": "Selector Punctuation (`#`, `.`, `:`, `::`, `[]`)",
            "scope": [
                "punctuation.definition.entity",
                "punctuation.definition.attribute-selector" // Attribute selector brackets in Sass (`[]`)
            ],
            "settings": {
                "foreground": "#8CDAFF"
            }
        },
        {
            "name": "Attribute Selector String Value", // temporary hack
            "scope": [
                "meta.attribute-selector"
            ],
            "settings": {
                "foreground": "#FBDFB5"
            }
        },
        {
            "name": "At Rule (`@mixin`, `@import`, etc.)",
            "scope": [
                "keyword.control.at-rule",
                "keyword.control.at-rule punctuation"
            ],
            "settings": {
                "foreground": "#FBDFB5",
                "fontStyle": "italic"
            }
        },
        {
            "name": "At Rule Function Name",
            "scope": [
                "meta.at-rule support.function"
            ],
            "settings": {
                "foreground": "#8CDAFF"
            }
        },
        {
            "name": "At Rule Function Parameter (`@mixin icon($name)`)",
            "scope": [
                "meta.at-rule.mixin variable.scss",
                "meta.at-rule.function variable.scss"
            ],
            "settings": {
                "foreground": "#D0D0D0",
                "fontStyle": "italic"
            }
        },
        {
            "name": "At Rule Default Parameter Value (`@mixin icon($name, $position: left)`)",
            "scope": [
                "meta.at-rule.mixin support.constant",
                "meta.at-rule.mixin variable.parameter",
                "meta.at-rule.function support.constant",
                "meta.at-rule.function variable.parameter"
            ],
            "settings": {
                "foreground": "#FBDFB5",
                "fontStyle": "italic"
            }
        },
        {
            "name": "At Rule Default Parameter Numeric Value (`@function pxToRem($number, $base: 14)`)",
            "scope": [
                "meta.at-rule.mixin constant.numeric",
                "meta.at-rule.function constant.numeric"
            ],
            "settings": {
                "fontStyle": "italic"
            }
        },
        {
            "name": "Include At Rule (`@include`)",
            "scope": [
                "keyword.control.at-rule.include",
                "keyword.control.at-rule.include punctuation"
            ],
            "settings": {
                "foreground": "#FF5E5E",
                "fontStyle": "normal"
            }
        },
        {
            "name": "Function At Rule Parens (`@function fn()`)",
            "scope": [
                "meta.at-rule.function punctuation.section"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Return At Rule (`@return #{$number / 14}rem`)",
            "scope": [
                "meta.at-rule.return" // in the example above this would target `rem`
            ],
            "settings": {
                "foreground": "#D0D0D0"
            }
        },
        {
            "name": "Return At Rule Braces (`@return $value / ($value * 100)`)",
            "scope": [
                "meta.at-rule.return punctuation.definition.begin.bracket",
                "meta.at-rule.return punctuation.definition.end.bracket"
            ],
            "settings": {
                "foreground": "#D0D0D0"
            }
        },
        {
            "name": "Function Invoked (`@include btn('primary')`, `color: darken($blue)`)",
            "scope": [
                "meta.at-rule.include entity.name.function",
                "meta.at-rule.include punctuation",
                "meta.property-value punctuation.section.function"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Sass Interpolation Braces (`#{}`)",
            "scope": [
                "punctuation.definition.interpolation"
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },
        {
            "name": "Sass Map Braces (`()`)",
            "scope": [
                "punctuation.definition.map"
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },

// JavaScript & JSON

        {
            "name": "Curly Braces (`{...}`)",
            "scope": [
                "punctuation.definition.block",
                "punctuation.definition.dictionary" // JSON
            ],
            "settings": {
                "foreground": "#A9B9B0"
            }
        },
        {
            "name": "Square Braces (`[...]`)",
            "scope": [
                "meta.brace.square",
                "punctuation.definition.array" // JSON
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },
        {
            "name": "Round Braces/Parens (`(...)`)",
            "scope": [
                "meta.brace.round"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Accessor Operator (`.`)",
            "scope": [
                "punctuation.accessor"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "DOM Object (`document`, `window`)",
            "scope": [
                "support.variable.dom"
            ],
            "settings": {
                "foreground": "#FFE082"
            }
        },
        {
            "name": "Prototype Object (`Func.prototype`)",
            "scope": [
                "support.variable.property.js"
            ],
            "settings": {
                "foreground": "#E9FDAC"
            }
        },
        {
            "name": "Constructor Function Name (`Number`, `String`, etc.)",
            "scope": [
                "support.class.js",
                "support.class.builtin.js"
            ],
            "settings": {
                "foreground": "#8CDAFF"
            }
        },
        {
            "name": "Constructor Function Name Invoked (`Number()`, `String()`, etc.)",
            "scope": [
                "meta.function-call support.class.builtin.js",
                "new.expr entity.name.type.js"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Constructor Function Name Prototype Read/Write (`Func.prototype = {...}`)",
            "scope": [
                "support.class.js"
            ],
            "settings": {
                "foreground": "#F8F8F2"
            }
        },
        {
            "name": "Template String (``my template string``)",
            "scope": [
                "string.template.js",
                "punctuation.definition.string.template"
            ],
            "settings": {
                "foreground": "#FBDFB5"
            }
        },
        {
            "name": "Template String Expression (``${MODULE}``)",
            "scope": [
                "meta.template.expression"
            ],
            "settings": {
                "foreground": "#F8F8F2"
            }
        },
        {
            "name": "Template String Expression Punctuation (``${...}``)",
            "scope": [
                "punctuation.definition.template-expression"
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },

// PHP

        {
            "name": "Embedded PHP Tags (`<?php ... ?>` in .phtml file)",
            "scope": [
                "punctuation.section.embedded"
            ],
            "settings": {
                "foreground": "#A9B9B0"
            }
        },
        {
            "name": "Round Braces/Parens (`(...)`)",
            "scope": [
                "punctuation.definition.begin.bracket.round",
                "punctuation.definition.end.bracket.round"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Function/Method Parameter (`function getFullName($fname, $lname`)",
            "scope": [
                "meta.function.parameter"
            ],
            "settings": {
                "foreground": "#D0D0D0",
                "fontStyle": "italic"
            }
        },
        {
            "name": "Array Brackets",
            "scope": [
                "punctuation.section.array"
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },
        {
            "name": "New Operator (`$obj = new My_Class`)",
            "scope": [
                "keyword.other.new"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },

// SQL

        {
            "name": "Operator (`SELECT`, `FROM`, `GROUP BY`, etc.)",
            "scope": [
                "keyword.other.sql",
                "keyword.other.DML.sql",
                "keyword.other.alias.sql"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "Language Constate (`NULL`)",
            "scope": [
                "keyword.other.DDL.create.II.sql"
            ],
            "settings": {
                "foreground": "#D77676"
            }
        },

// Markdown

        {
            "name": "Headings (`# My Heading`)",
            "scope": [
                "entity.name.section",
                "punctuation.definition.heading"
            ],
            "settings": {
                "foreground": "#8CDAFF"
            }
        },
        {
            "name": "Beginning Markup (`1.`, `-`, `>`, etc.)",
            "scope": [
                "markup beginning.punctuation"
            ],
            "settings": {
                "foreground": "#FF5E5E"
            }
        },
        {
            "name": "Inline Markup (`*`, `**`, `_`, etc.)",
            "scope": [
                "markup punctuation"
            ],
            "settings": {
                "foreground": "#FFCC32"
            }
        },
        {
            "name": "Link",
            "scope": [
                "string.other.link"
            ],
            "settings": {
                "foreground": "#FBDFB5"
            }
        },
        {
            "name": "Link href",
            "scope": [
                "markup.underline.link"
            ],
            "settings": {
                "foreground": "#A9B9B0"
            }
        },
        {
            "name": "Link Container Punctuation (`[...](...)`)",
            "scope": [
                "meta.link punctuation"
            ],
            "settings": {
                "foreground": "#C9E9E0"
            }
        },
        {
            "name": "Code Block (```)",
            "scope": [
                "markup.fenced_code punctuation"
            ],
            "settings": {
                "foreground": "#B8FCB1"
            }
        }
    ]
}
